{
  "hash": "35dc7a6a1714cb00d232f4be02024446",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"more review\"\nsubtitle: \"dplyr package review\"\nauthor:\n  - name: \"Derek Rice\"\n    affiliations:\n      - name: \"School of Information, University of Arizona\"\ndescription: \"INFO526 Term Project\"\nformat:\n  html:\n    code-tools: true\n    code-overflow: wrap\n    code-line-numbers: true\n    embed-resources: true\neditor: visual\ncode-annotations: hover\nexecute:\n  warning: false\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- data.frame(x1 = 1:6,\n                   x2 = c(1,2,2,3,1,2),\n                   x3 = c(\"f\",\"e\",\"C\",\"E\",\"A\",\"D\"))\n\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 x3\n1  1  1  f\n2  2  2  e\n3  3  2  C\n4  4  3  E\n5  5  1  A\n6  6  2  D\n```\n\n\n:::\n\n```{.r .cell-code}\narrange(data,x3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 x3\n1  5  1  A\n2  3  2  C\n3  6  2  D\n4  4  3  E\n5  2  2  e\n6  1  1  f\n```\n\n\n:::\n\n```{.r .cell-code}\nfilter(data, x2 ==2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 x3\n1  2  2  e\n2  3  2  C\n3  6  2  D\n```\n\n\n:::\n\n```{.r .cell-code}\nmutate(data, x4 = x1+x2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 x3 x4\n1  1  1  f  2\n2  2  2  e  4\n3  3  2  C  5\n4  4  3  E  7\n5  5  1  A  6\n6  6  2  D  8\n```\n\n\n:::\n\n```{.r .cell-code}\npull(data, x2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 2 2 3 1 2\n```\n\n\n:::\n\n```{.r .cell-code}\nrename(data, new_name = x3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 new_name\n1  1  1        f\n2  2  2        e\n3  3  2        C\n4  4  3        E\n5  5  1        A\n6  6  2        D\n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(765)\nsample_n(data,3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 x3\n1  4  3  E\n2  6  2  D\n3  3  2  C\n```\n\n\n:::\n\n```{.r .cell-code}\nselect(data, c(x2,x3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x2 x3\n1  1  f\n2  2  e\n3  2  C\n4  3  E\n5  1  A\n6  2  D\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata1 <- data.frame(ID = 1:2,\n                    X1 = c(\"a1\",\"a2\"),\n                    stringsAsFactors = FALSE)\ndata2 <- data.frame(ID = 2:3,\n                    X2 = c(\"b1\",\"b2\"),\n                    stringsAsFactors = FALSE)\n\ndata1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  ID X1\n1  1 a1\n2  2 a2\n```\n\n\n:::\n\n```{.r .cell-code}\ndata2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  ID X2\n1  2 b1\n2  3 b2\n```\n\n\n:::\n\n```{.r .cell-code}\ninner_join(data1,data2,by = \"ID\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  ID X1 X2\n1  2 a2 b1\n```\n\n\n:::\n\n```{.r .cell-code}\nleft_join(data1, data2, by = \"ID\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  ID X1   X2\n1  1 a1 <NA>\n2  2 a2   b1\n```\n\n\n:::\n\n```{.r .cell-code}\nright_join(data1,data2, by = \"ID\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  ID   X1 X2\n1  2   a2 b1\n2  3 <NA> b2\n```\n\n\n:::\n\n```{.r .cell-code}\nfull_join(data1,data2, by = \"ID\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  ID   X1   X2\n1  1   a1 <NA>\n2  2   a2   b1\n3  3 <NA>   b2\n```\n\n\n:::\n\n```{.r .cell-code}\nsemi_join(data1,data2, by = \"ID\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  ID X1\n1  2 a2\n```\n\n\n:::\n\n```{.r .cell-code}\nanti_join(data1,data2, by = \"ID\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  ID X1\n1  1 a1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# bind_rows and bind_cols functions of dplyr package\n\ndata1 <- data.frame(x1 = 1:5,\n                    x2 = letters[1:5])\ndata2 <- data.frame(x1 = 0,\n                    x3 = 5:9)\n                    \ndata3 <- data.frame(x3 = 5:9,\n                    x4 = letters[5:9])\n\nbind_rows(data1,data2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   x1   x2 x3\n1   1    a NA\n2   2    b NA\n3   3    c NA\n4   4    d NA\n5   5    e NA\n6   0 <NA>  5\n7   0 <NA>  6\n8   0 <NA>  7\n9   0 <NA>  8\n10  0 <NA>  9\n```\n\n\n:::\n\n```{.r .cell-code}\nbind_cols(data1,data3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 x3 x4\n1  1  a  5  e\n2  2  b  6  f\n3  3  c  7  g\n4  4  d  8  h\n5  5  e  9  i\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# arrange function of dplyr \ndata <- data.frame(x1 = 1:5,\n                   x2 = c(1,2,2,1,2),\n                   x3 = c(\"b\",\"E\",\"C\",\"A\",\"D\"))\n\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 x3\n1  1  1  b\n2  2  2  E\n3  3  2  C\n4  4  1  A\n5  5  2  D\n```\n\n\n:::\n\n```{.r .cell-code}\narrange(data,x2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 x3\n1  1  1  b\n2  4  1  A\n3  2  2  E\n4  3  2  C\n5  5  2  D\n```\n\n\n:::\n\n```{.r .cell-code}\narrange(data,x2,x3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 x3\n1  4  1  A\n2  1  1  b\n3  3  2  C\n4  5  2  D\n5  2  2  E\n```\n\n\n:::\n\n```{.r .cell-code}\ndata1 <- data |>\n  arrange(data,x2) |>\n  mutate(x4 = x1 + x2) |>\n  arrange(x4)\n\ndata1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 x3 x4\n1  1  1  b  2\n2  2  2  E  4\n3  3  2  C  5\n4  4  1  A  5\n5  5  2  D  7\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# apply lead and lag functions \n\nx <- 1:10\n# lead function shifted our vector one element to the right side\n# lag function shifts our vector one element to the left \n\n\nlead(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  2  3  4  5  6  7  8  9 10 NA\n```\n\n\n:::\n\n```{.r .cell-code}\nlead(x,3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  4  5  6  7  8  9 10 NA NA NA\n```\n\n\n:::\n\n```{.r .cell-code}\nlag(x,3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] NA NA NA  1  2  3  4  5  6  7\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# filter R function of dplyr\n\ndata <- data.frame(x1 = 1:5,\n                   x2 = letters[1:5],\n                   group = c(\"gr1\",\"gr2\",\"gr3\",\"gr4\",\"gr5\"))\n\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 group\n1  1  a   gr1\n2  2  b   gr2\n3  3  c   gr3\n4  4  d   gr4\n5  5  e   gr5\n```\n\n\n:::\n\n```{.r .cell-code}\nfilter(data,group == \"gr2\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 group\n1  2  b   gr2\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- data.frame(x1 = 1:5,\n                   x2 = 5:9)\n\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2\n1  1  5\n2  2  6\n3  3  7\n4  4  8\n5  5  9\n```\n\n\n:::\n\n```{.r .cell-code}\nmutate(data, x3 = x1+x2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 x3\n1  1  5  6\n2  2  6  8\n3  3  7 10\n4  4  8 12\n5  5  9 14\n```\n\n\n:::\n\n```{.r .cell-code}\ntransmute(data, x3 = x1+x2) # returns only x3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x3\n1  6\n2  8\n3 10\n4 12\n5 14\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# dataframe vs. tibble \n\ndf <- data.frame (\n  x = 1:5,\n  y = c(\"a\",\"b\",\"c\",\"d\",\"e\")\n)\n\nprint(df) # int, chr\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x y\n1 1 a\n2 2 b\n3 3 c\n4 4 d\n5 5 e\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t5 obs. of  2 variables:\n $ x: int  1 2 3 4 5\n $ y: chr  \"a\" \"b\" \"c\" \"d\" ...\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tibble)\n\ntb <- tibble(\n  x = 1:5,\n  y = c(\"a\",\"b\",\"c\",\"d\",\"e\")\n)\n\nprint(tb) #int, chr\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n      x y    \n  <int> <chr>\n1     1 a    \n2     2 b    \n3     3 c    \n4     4 d    \n5     5 e    \n```\n\n\n:::\n\n```{.r .cell-code}\ndata <- data.frame(x1 = 1:5,\n                   x2 = letters[1:5],\n                   x3 = 1)\n\ndata # int, chr, dbl\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 x3\n1  1  a  1\n2  2  b  1\n3  3  c  1\n4  4  d  1\n5  5  e  1\n```\n\n\n:::\n\n```{.r .cell-code}\ndata1 <- as_tibble(data)\n\ndata1 #int, chr, dbl - so what is the big deal? \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n     x1 x2       x3\n  <int> <chr> <dbl>\n1     1 a         1\n2     2 b         1\n3     3 c         1\n4     4 d         1\n5     5 e         1\n```\n\n\n:::\n\n```{.r .cell-code}\nx1 <- data1 |>\n  pull(x1)\n\nx1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 2 3 4 5\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# subset data frame rows by logical conditions \n\ndata <- data.frame(x1 = c(3,7,1,8,5),\n                   x2 = letters[1:5],\n                   group = c(\"g1\",\"g2\",\"g3\",\"g4\",\"g5\"))\n\ndata[data$group == \"g1\",]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 group\n1  3  a    g1\n```\n\n\n:::\n\n```{.r .cell-code}\ndata[data$group != \"g1\",]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 group\n2  7  b    g2\n3  1  c    g3\n4  8  d    g4\n5  5  e    g5\n```\n\n\n:::\n\n```{.r .cell-code}\ndata[data$group %in% c(\"g1\",\"g3\"),]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 group\n1  3  a    g1\n3  1  c    g3\n```\n\n\n:::\n\n```{.r .cell-code}\nsubset(data,group == \"g1\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 group\n1  3  a    g1\n```\n\n\n:::\n\n```{.r .cell-code}\nfilter(data, group == \"g1\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 group\n1  3  a    g1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# if_else R funciton of dplyr package \n\nx <- -3:3\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -3 -2 -1  0  1  2  3\n```\n\n\n:::\n\n```{.r .cell-code}\nif_else (x < 0, \"neg\",\"pos\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"neg\" \"neg\" \"neg\" \"pos\" \"pos\" \"pos\" \"pos\"\n```\n\n\n:::\n\n```{.r .cell-code}\nx_NA <- c(-3:3,NA)\nx_NA\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -3 -2 -1  0  1  2  3 NA\n```\n\n\n:::\n\n```{.r .cell-code}\nif_else(x_NA < 0, \"neg\",\"pos\", \"xxx\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"neg\" \"neg\" \"neg\" \"pos\" \"pos\" \"pos\" \"pos\" \"xxx\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# sample_n and sample_frac R function in dplyr\n\ndata <- data.frame(x1 = c(1,2,1,3,2,3),\n                   x2 = c(\"a\",\"a\",\"c\",\"a\",\"b\",\"c\"))\n\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2\n1  1  a\n2  2  a\n3  1  c\n4  3  a\n5  2  b\n6  3  c\n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(14)\n\nsample_n(data,3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2\n1  1  a\n2  3  c\n3  1  c\n```\n\n\n:::\n\n```{.r .cell-code}\nsample_frac(data,0.33)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2\n1  3  a\n2  1  c\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# convert data frame to tibble and test \n\nmy_data <- data.frame(x1 = 1:5,\n                      x2 = LETTERS[1:5],\n                      x3 = 5)\n\n\nmy_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 x3\n1  1  A  5\n2  2  B  5\n3  3  C  5\n4  4  D  5\n5  5  E  5\n```\n\n\n:::\n\n```{.r .cell-code}\nmy_tbl <- as_tibble(my_data)\nmy_tbl\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n     x1 x2       x3\n  <int> <chr> <dbl>\n1     1 A         5\n2     2 B         5\n3     3 C         5\n4     4 D         5\n5     5 E         5\n```\n\n\n:::\n\n```{.r .cell-code}\nis.tbl(my_data) # false\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nis.tbl(my_tbl) # true\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- data.frame (x1 = 1:5,\n                   x2 = LETTERS[1:5])\n\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2\n1  1  A\n2  2  B\n3  3  C\n4  4  D\n5  5  E\n```\n\n\n:::\n\n```{.r .cell-code}\npull(data,x1) # apply pull function \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 2 3 4 5\n```\n\n\n:::\n\n```{.r .cell-code}\npull(data,1) # pull function with index\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 2 3 4 5\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- data.frame(x1 = 1:5,\n                   x2 = LETTERS[1:5],\n                   x3 = 5)\n\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x2 x3\n1  1  A  5\n2  2  B  5\n3  3  C  5\n4  4  D  5\n5  5  E  5\n```\n\n\n:::\n\n```{.r .cell-code}\nselect(data, c(x1,x3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1 x3\n1  1  5\n2  2  5\n3  3  5\n4  4  5\n5  5  5\n```\n\n\n:::\n\n```{.r .cell-code}\nrename(data,x1_new = x1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1_new x2 x3\n1      1  A  5\n2      2  B  5\n3      3  C  5\n4      4  D  5\n5      5  E  5\n```\n\n\n:::\n\n```{.r .cell-code}\nmy_data <- data |>\n  select(c(x1,x3)) |>\n  arrange(x1) |>\n  rename(x1_new = x1, x3_new = x3)\n\nmy_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x1_new x3_new\n1      1      5\n2      2      5\n3      3      5\n4      4      5\n5      5      5\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# summarize\n\ndata <- data.frame (gr1 = rep(LETTERS[1:4],each = 3),\n                    gr2 = LETTERS[1:2],\n                    values = 101:112)\n\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   gr1 gr2 values\n1    A   A    101\n2    A   B    102\n3    A   A    103\n4    B   B    104\n5    B   A    105\n6    B   B    106\n7    C   A    107\n8    C   B    108\n9    C   A    109\n10   D   B    110\n11   D   A    111\n12   D   B    112\n```\n\n\n:::\n\n```{.r .cell-code}\ndata_group <- data |>\n  group_by(gr1,gr2) |>\n  summarise(gr_sum = sum(values))\n\n\n\ndata_group\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 3\n# Groups:   gr1 [4]\n  gr1   gr2   gr_sum\n  <chr> <chr>  <int>\n1 A     A        204\n2 A     B        102\n3 B     A        105\n4 B     B        210\n5 C     A        216\n6 C     B        108\n7 D     A        111\n8 D     B        222\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntib_dest <- read_csv(\"data/Most_Visited_Destination_in_2018_and_2019.csv\")\n\n# view(tib_dest)\n\ntib_dest |>\n  class()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n```\n\n\n:::\n\n```{.r .cell-code}\ntib_dest_new <- tib_dest |>\n  rename(T2019 = \"International  tourist  arrivals  (2019)\", T2018 = \"International  tourist  arrivals  (2018)\")\n\ntib_dest_new <- tib_dest_new |>\n  mutate(across(everything(), ~ replace(., . == \"-\", NA )),\n         T2019 = as.numeric(str_replace(T2019, \"million\", \"\"))*1e6,\n         T2018 = as.numeric(str_replace(T2018, \"million\", \"\"))*1e6) |>\n  filter(Destination != \"Egypt\" | Region == \"Africa\") |>\n  na.omit()\n\n\ntib_dest_new\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 35 × 5\n    ...1 Destination      T2019    T2018 Region \n   <dbl> <chr>            <dbl>    <dbl> <chr>  \n 1     0 Egypt         13000000 11300000 Africa \n 2     1 Morocco       12900000 12300000 Africa \n 3     2 South Africa  10200000 10500000 Africa \n 4     3 Tunisia        9400000  8300000 Africa \n 5     4 Algeria        2400000  2700000 Africa \n 6     5 Zimbabwe       2300000  2600000 Africa \n 7     6 Mozambique     2000000  2700000 Africa \n 8    10 United States 79300000 79700000 America\n 9    11 Mexico        45000000 41300000 America\n10    12 Canada        22100000 21100000 America\n# ℹ 25 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nmy_plot <- tib_dest_new |>\n  mutate(Destination = reorder(Destination, - T2019)) |>\n  ggplot(aes(x = Destination,\n             y = T2019,\n             fill = Region)) +\n  geom_col() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90,\n                                   hjust = 1,\n                                   vjust = 0.5))\n\n\nmy_plot\n```\n\n::: {.cell-output-display}\n![](coding_practice_22JUNE2024_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "coding_practice_22JUNE2024_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}