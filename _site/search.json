[
  {
    "objectID": "review_interactive_maps_22JUNE24.html",
    "href": "review_interactive_maps_22JUNE24.html",
    "title": "review_interactive_maps",
    "section": "",
    "text": "# cite: https://www.youtube.com/watch?v=RrtqBYLf404\n\nminwage_df &lt;- read_csv(\"data/Minimum Wage Data.csv\") \n\nRows: 2862 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): State, Department.Of.Labor.Uncleaned.Data, Footnote\ndbl (12): Year, State.Minimum.Wage, State.Minimum.Wage.2020.Dollars, Federal...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nstates &lt;- read_csv(\"data/states.csv\")\n\nRows: 51 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): state, abbrev, code\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#view(states)\n#view(minwage_df)\n\nwage_columns &lt;- grep(\"wage\", names(minwage_df), ignore.case = TRUE, value = TRUE)\nwage_columns\n\n[1] \"State.Minimum.Wage\"                  \"State.Minimum.Wage.2020.Dollars\"    \n[3] \"Federal.Minimum.Wage\"                \"Federal.Minimum.Wage.2020.Dollars\"  \n[5] \"Effective.Minimum.Wage\"              \"Effective.Minimum.Wage.2020.Dollars\"\n\nminwage &lt;- minwage_df |&gt;\n  inner_join(states, by = c(\"State\" = \"state\")) |&gt;\n  mutate(highest_wage = apply(across(all_of(wage_columns)), 1,min, na.rm = TRUE)) |&gt;\n  select(Year, State, code, highest_wage)\n\n# view(minwage)\n\n\nminwage_graph &lt;- plot_geo(minwage,\n                          locationmode = \"USA-states\",\n                          frame = ~Year) |&gt;\n  add_trace(locations = ~code,\n            z = ~highest_wage)\n\n\nminwage_graph\n\n\n\n\n\n\nminwage_graph &lt;- plot_geo(minwage,\n                          locationmode = \"USA-states\",\n                          frame = ~Year) |&gt;\n  add_trace(locations = ~code,\n            z = ~highest_wage,\n            zmin = 0,\n            zmax = max(minwage$highest_wage),\n            colour = ~highest_wage) |&gt;\n  layout(geo = list(scope = 'usa'))\n\n\nminwage_graph\n\nWarning: 'choropleth' objects don't have these attributes: 'colour'\nValid attributes include:\n'autocolorscale', 'coloraxis', 'colorbar', 'colorscale', 'customdata', 'customdatasrc', 'featureidkey', 'geo', 'geojson', 'hoverinfo', 'hoverinfosrc', 'hoverlabel', 'hovertemplate', 'hovertemplatesrc', 'hovertext', 'hovertextsrc', 'ids', 'idssrc', 'legendgroup', 'legendgrouptitle', 'legendrank', 'locationmode', 'locations', 'locationssrc', 'marker', 'meta', 'metasrc', 'name', 'reversescale', 'selected', 'selectedpoints', 'showlegend', 'showscale', 'stream', 'text', 'textsrc', 'transforms', 'type', 'uid', 'uirevision', 'unselected', 'visible', 'z', 'zauto', 'zmax', 'zmid', 'zmin', 'zsrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'\n\n\n\n\n\n\n\nminwage &lt;- minwage |&gt;\n  mutate(hover = paste0(State, \"\\n$\", highest_wage))\n\n\nfontStyle = list(\n  family = \"DM Sans\",\n  size = 15,\n  colour = \"black\")\n\nlabel = list(\n  bgcolour = \"#EEEEEE\",\n  bordercolour = \"transparent\",\n  font = fontStyle\n)\n\n# view(minwage) # need tidyverse \n\nminwage_graph &lt;- plot_geo(minwage,\n                          locationmode = \"USA-states\",\n                          frame = ~Year) |&gt;\n  add_trace(locations = ~code,\n            z = ~highest_wage,\n            zmin = 0,\n            zmax = round(max(minwage$highest_wage),2),\n            colour = ~highest_wage,\n            text = ~ hover,\n            hoverinfo = \"text\") |&gt;\n  layout(geo = list(scope = 'usa'),\n         font = list(family = \"DM Sans\"),\n         title = \"Min Wage in US\\n1968 to 2020\",\n         legend = list(title = list(text = \"wage ($)\"))) |&gt;\n  style(hoverlabel = label) |&gt;\n  config(displayModeBar = FALSE) |&gt;\n  colorbar(tickprefix = \"$\")\n\nWarning: 'choropleth' objects don't have these attributes: 'colour'\nValid attributes include:\n'autocolorscale', 'coloraxis', 'colorbar', 'colorscale', 'customdata', 'customdatasrc', 'featureidkey', 'geo', 'geojson', 'hoverinfo', 'hoverinfosrc', 'hoverlabel', 'hovertemplate', 'hovertemplatesrc', 'hovertext', 'hovertextsrc', 'ids', 'idssrc', 'legendgroup', 'legendgrouptitle', 'legendrank', 'locationmode', 'locations', 'locationssrc', 'marker', 'meta', 'metasrc', 'name', 'reversescale', 'selected', 'selectedpoints', 'showlegend', 'showscale', 'stream', 'text', 'textsrc', 'transforms', 'type', 'uid', 'uirevision', 'unselected', 'visible', 'z', 'zauto', 'zmax', 'zmid', 'zmin', 'zsrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'\nWarning: 'choropleth' objects don't have these attributes: 'colour'\nValid attributes include:\n'autocolorscale', 'coloraxis', 'colorbar', 'colorscale', 'customdata', 'customdatasrc', 'featureidkey', 'geo', 'geojson', 'hoverinfo', 'hoverinfosrc', 'hoverlabel', 'hovertemplate', 'hovertemplatesrc', 'hovertext', 'hovertextsrc', 'ids', 'idssrc', 'legendgroup', 'legendgrouptitle', 'legendrank', 'locationmode', 'locations', 'locationssrc', 'marker', 'meta', 'metasrc', 'name', 'reversescale', 'selected', 'selectedpoints', 'showlegend', 'showscale', 'stream', 'text', 'textsrc', 'transforms', 'type', 'uid', 'uirevision', 'unselected', 'visible', 'z', 'zauto', 'zmax', 'zmid', 'zmin', 'zsrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'\n\nminwage_graph\n\nWarning: 'choropleth' objects don't have these attributes: 'colour'\nValid attributes include:\n'autocolorscale', 'coloraxis', 'colorbar', 'colorscale', 'customdata', 'customdatasrc', 'featureidkey', 'geo', 'geojson', 'hoverinfo', 'hoverinfosrc', 'hoverlabel', 'hovertemplate', 'hovertemplatesrc', 'hovertext', 'hovertextsrc', 'ids', 'idssrc', 'legendgroup', 'legendgrouptitle', 'legendrank', 'locationmode', 'locations', 'locationssrc', 'marker', 'meta', 'metasrc', 'name', 'reversescale', 'selected', 'selectedpoints', 'showlegend', 'showscale', 'stream', 'text', 'textsrc', 'transforms', 'type', 'uid', 'uirevision', 'unselected', 'visible', 'z', 'zauto', 'zmax', 'zmid', 'zmin', 'zsrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'\n\n\n\n\n\n\n\nufos &lt;- read_csv(\"data/scrubbed.csv\") |&gt;\n  select(longitude, latitude, datetime, shape)\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 80332 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): datetime, city, state, country, shape, duration (hours/min), commen...\ndbl (3): duration (seconds), latitude, longitude\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# view(ufos)\n\ngeo_properties = list(\n  scope = 'usa',\n  projection = list(type = 'albers usa'),\n  showland = TRUE,\n  showsubunits = FALSE,\n  landcolor = toRGB('gray10'),\n  showlakes = TRUE,\n  lakecolor = toRGB('white'))\n                      \n\nufos_graph = plot_geo(ufos,\n                  lat = ~ latitude,\n                  lon = ~ longitude,\n                  marker = list(size = 2, color = \"#FFFFCC\", opacity = 0.25 )) |&gt;\n  add_markers(hoverinfo = 'none') |&gt;\n  config(displayModeBar = FALSE) |&gt;\n  layout(geo = geo_properties)\n\n\nufos_graph\n\nWarning: Ignoring 1 observations"
  },
  {
    "objectID": "presentation.html#question",
    "href": "presentation.html#question",
    "title": "Outer Space Vehicle Launch",
    "section": "Question:",
    "text": "Question:\n“What country will dominate the future of space launch?”"
  },
  {
    "objectID": "presentation.html#the-dataset",
    "href": "presentation.html#the-dataset",
    "title": "Outer Space Vehicle Launch",
    "section": "The Dataset",
    "text": "The Dataset\n\nAnalysis used the “yearly number of objects launched into outer space” dataset.\nThe source of the dataset is the United Nations Office of Outer Space Affairs.\nThe dataset is available within the tidytuesday package.\nThe dataset provides the number of objects launched into space from 1957 to 2023 as a function of country.\nThe dataset starts with the Russian launch of Sputnik, maps out the space race between Russia and the United States, includes the global growth of spacing faring nations, and the recent exponential growth in launch activity."
  },
  {
    "objectID": "presentation.html#analysis-approach",
    "href": "presentation.html#analysis-approach",
    "title": "Outer Space Vehicle Launch",
    "section": "Analysis Approach:",
    "text": "Analysis Approach:\n\nStep 1 - data cleanup\nStep 2 - plot and map dataset to understand the history space launch activity\nStep 3 - fit a model to the data for the fifteen most active nations\nStep 4 - use the model to predict future space launch activity\nStep 5 - plot and map future space launch activity\nStep 6 - tell the story of the future of space launch"
  },
  {
    "objectID": "presentation.html#conclusions",
    "href": "presentation.html#conclusions",
    "title": "Outer Space Vehicle Launch",
    "section": "Conclusions",
    "text": "Conclusions\n\nThe original question was “What country will dominate the future of space launch?”\nThe inital dataset 1957 to 2023 tells the story of Russian early leadership, the American race to catch up during the Apollo years, the evolving global nature of space launch, and the recent exponential growth in the industry.\nThe predicted model suggests American, Chinese, Indian, and United Kingdon launch efforts will grow significantly while Russia will declide over the coming decades.\nThe analysis indicates the first space faring nation will be the United States accounting for over 80% of global space launch activity."
  },
  {
    "objectID": "Lesson_Interactive_Map_Germany_21JUNE2024.html",
    "href": "Lesson_Interactive_Map_Germany_21JUNE2024.html",
    "title": "map_interactive",
    "section": "",
    "text": "cite: https://www.youtube.com/watch?v=efj6-aawubs\n\nif (!require(\"pacman\"))\n  install.packages(\"pacman\")\n\nLoading required package: pacman\n\n\nWarning: package 'pacman' was built under R version 4.2.3\n\npacman::p_load(tidyverse,\n               giscoR,\n               janitor,\n               s2,\n               ggiraph,\n               sf)\n\ngermany_districts &lt;- gisco_get_nuts(\n  country = 'Germany',\n  nuts_level = 3,\n  year = \"2021\",\n  epsg = 3035) |&gt;\n    as_tibble() |&gt;\n    clean_names() \n\ngermany_states &lt;- gisco_get_nuts(\n  country = 'Germany',\n  nuts_level = 1,\n  year = \"2021\",\n  epsg = 3035) |&gt;\n    as_tibble() |&gt;\n    clean_names() \n\n\ngg_plt &lt;- germany_districts |&gt;\n  ggplot(aes (geometry = geometry)) +\n  geom_sf(data = germany_states, \n          aes(fill = nuts_name),\n          color = \"blue\",\n          linewidth = 1) +\n  geom_sf_interactive(\n    fill = NA,\n    aes(\n      data_id = nuts_id,\n      tooltip = nuts_name\n    ),\n    color = \"red\",\n    linewidth = 0.1\n  ) +\n  theme_void() + \n  theme(\n    legend.title = element_blank(),\n    legend.position = \"none\"\n  )\n\n\ngirafe(ggobj = gg_plt)"
  },
  {
    "objectID": "coding_practice_22JUNE2024.html",
    "href": "coding_practice_22JUNE2024.html",
    "title": "more review",
    "section": "",
    "text": "data &lt;- data.frame(x1 = 1:6,\n                   x2 = c(1,2,2,3,1,2),\n                   x3 = c(\"f\",\"e\",\"C\",\"E\",\"A\",\"D\"))\n\ndata\n\n  x1 x2 x3\n1  1  1  f\n2  2  2  e\n3  3  2  C\n4  4  3  E\n5  5  1  A\n6  6  2  D\n\narrange(data,x3)\n\n  x1 x2 x3\n1  5  1  A\n2  3  2  C\n3  6  2  D\n4  4  3  E\n5  2  2  e\n6  1  1  f\n\nfilter(data, x2 ==2)\n\n  x1 x2 x3\n1  2  2  e\n2  3  2  C\n3  6  2  D\n\nmutate(data, x4 = x1+x2)\n\n  x1 x2 x3 x4\n1  1  1  f  2\n2  2  2  e  4\n3  3  2  C  5\n4  4  3  E  7\n5  5  1  A  6\n6  6  2  D  8\n\npull(data, x2)\n\n[1] 1 2 2 3 1 2\n\nrename(data, new_name = x3)\n\n  x1 x2 new_name\n1  1  1        f\n2  2  2        e\n3  3  2        C\n4  4  3        E\n5  5  1        A\n6  6  2        D\n\nset.seed(765)\nsample_n(data,3)\n\n  x1 x2 x3\n1  4  3  E\n2  6  2  D\n3  3  2  C\n\nselect(data, c(x2,x3))\n\n  x2 x3\n1  1  f\n2  2  e\n3  2  C\n4  3  E\n5  1  A\n6  2  D\n\n\n\ndata1 &lt;- data.frame(ID = 1:2,\n                    X1 = c(\"a1\",\"a2\"),\n                    stringsAsFactors = FALSE)\ndata2 &lt;- data.frame(ID = 2:3,\n                    X2 = c(\"b1\",\"b2\"),\n                    stringsAsFactors = FALSE)\n\ndata1\n\n  ID X1\n1  1 a1\n2  2 a2\n\ndata2\n\n  ID X2\n1  2 b1\n2  3 b2\n\ninner_join(data1,data2,by = \"ID\")\n\n  ID X1 X2\n1  2 a2 b1\n\nleft_join(data1, data2, by = \"ID\")\n\n  ID X1   X2\n1  1 a1 &lt;NA&gt;\n2  2 a2   b1\n\nright_join(data1,data2, by = \"ID\")\n\n  ID   X1 X2\n1  2   a2 b1\n2  3 &lt;NA&gt; b2\n\nfull_join(data1,data2, by = \"ID\")\n\n  ID   X1   X2\n1  1   a1 &lt;NA&gt;\n2  2   a2   b1\n3  3 &lt;NA&gt;   b2\n\nsemi_join(data1,data2, by = \"ID\")\n\n  ID X1\n1  2 a2\n\nanti_join(data1,data2, by = \"ID\")\n\n  ID X1\n1  1 a1\n\n\n\n# bind_rows and bind_cols functions of dplyr package\n\ndata1 &lt;- data.frame(x1 = 1:5,\n                    x2 = letters[1:5])\ndata2 &lt;- data.frame(x1 = 0,\n                    x3 = 5:9)\n                    \ndata3 &lt;- data.frame(x3 = 5:9,\n                    x4 = letters[5:9])\n\nbind_rows(data1,data2)\n\n   x1   x2 x3\n1   1    a NA\n2   2    b NA\n3   3    c NA\n4   4    d NA\n5   5    e NA\n6   0 &lt;NA&gt;  5\n7   0 &lt;NA&gt;  6\n8   0 &lt;NA&gt;  7\n9   0 &lt;NA&gt;  8\n10  0 &lt;NA&gt;  9\n\nbind_cols(data1,data3)\n\n  x1 x2 x3 x4\n1  1  a  5  e\n2  2  b  6  f\n3  3  c  7  g\n4  4  d  8  h\n5  5  e  9  i\n\n\n\n# arrange function of dplyr \ndata &lt;- data.frame(x1 = 1:5,\n                   x2 = c(1,2,2,1,2),\n                   x3 = c(\"b\",\"E\",\"C\",\"A\",\"D\"))\n\ndata\n\n  x1 x2 x3\n1  1  1  b\n2  2  2  E\n3  3  2  C\n4  4  1  A\n5  5  2  D\n\narrange(data,x2)\n\n  x1 x2 x3\n1  1  1  b\n2  4  1  A\n3  2  2  E\n4  3  2  C\n5  5  2  D\n\narrange(data,x2,x3)\n\n  x1 x2 x3\n1  4  1  A\n2  1  1  b\n3  3  2  C\n4  5  2  D\n5  2  2  E\n\ndata1 &lt;- data |&gt;\n  arrange(data,x2) |&gt;\n  mutate(x4 = x1 + x2) |&gt;\n  arrange(x4)\n\ndata1\n\n  x1 x2 x3 x4\n1  1  1  b  2\n2  2  2  E  4\n3  3  2  C  5\n4  4  1  A  5\n5  5  2  D  7\n\n\n\n# apply lead and lag functions \n\nx &lt;- 1:10\n# lead function shifted our vector one element to the right side\n# lag function shifts our vector one element to the left \n\n\nlead(x)\n\n [1]  2  3  4  5  6  7  8  9 10 NA\n\nlead(x,3)\n\n [1]  4  5  6  7  8  9 10 NA NA NA\n\nlag(x,3)\n\n [1] NA NA NA  1  2  3  4  5  6  7\n\n\n\n# filter R function of dplyr\n\ndata &lt;- data.frame(x1 = 1:5,\n                   x2 = letters[1:5],\n                   group = c(\"gr1\",\"gr2\",\"gr3\",\"gr4\",\"gr5\"))\n\ndata\n\n  x1 x2 group\n1  1  a   gr1\n2  2  b   gr2\n3  3  c   gr3\n4  4  d   gr4\n5  5  e   gr5\n\nfilter(data,group == \"gr2\")\n\n  x1 x2 group\n1  2  b   gr2\n\n\n\ndata &lt;- data.frame(x1 = 1:5,\n                   x2 = 5:9)\n\ndata\n\n  x1 x2\n1  1  5\n2  2  6\n3  3  7\n4  4  8\n5  5  9\n\nmutate(data, x3 = x1+x2)\n\n  x1 x2 x3\n1  1  5  6\n2  2  6  8\n3  3  7 10\n4  4  8 12\n5  5  9 14\n\ntransmute(data, x3 = x1+x2) # returns only x3\n\n  x3\n1  6\n2  8\n3 10\n4 12\n5 14\n\n\n\n# dataframe vs. tibble \n\ndf &lt;- data.frame (\n  x = 1:5,\n  y = c(\"a\",\"b\",\"c\",\"d\",\"e\")\n)\n\nprint(df) # int, chr\n\n  x y\n1 1 a\n2 2 b\n3 3 c\n4 4 d\n5 5 e\n\nstr(df)\n\n'data.frame':   5 obs. of  2 variables:\n $ x: int  1 2 3 4 5\n $ y: chr  \"a\" \"b\" \"c\" \"d\" ...\n\nlibrary(tibble)\n\ntb &lt;- tibble(\n  x = 1:5,\n  y = c(\"a\",\"b\",\"c\",\"d\",\"e\")\n)\n\nprint(tb) #int, chr\n\n# A tibble: 5 × 2\n      x y    \n  &lt;int&gt; &lt;chr&gt;\n1     1 a    \n2     2 b    \n3     3 c    \n4     4 d    \n5     5 e    \n\ndata &lt;- data.frame(x1 = 1:5,\n                   x2 = letters[1:5],\n                   x3 = 1)\n\ndata # int, chr, dbl\n\n  x1 x2 x3\n1  1  a  1\n2  2  b  1\n3  3  c  1\n4  4  d  1\n5  5  e  1\n\ndata1 &lt;- as_tibble(data)\n\ndata1 #int, chr, dbl - so what is the big deal? \n\n# A tibble: 5 × 3\n     x1 x2       x3\n  &lt;int&gt; &lt;chr&gt; &lt;dbl&gt;\n1     1 a         1\n2     2 b         1\n3     3 c         1\n4     4 d         1\n5     5 e         1\n\nx1 &lt;- data1 |&gt;\n  pull(x1)\n\nx1\n\n[1] 1 2 3 4 5\n\n\n\n# subset data frame rows by logical conditions \n\ndata &lt;- data.frame(x1 = c(3,7,1,8,5),\n                   x2 = letters[1:5],\n                   group = c(\"g1\",\"g2\",\"g3\",\"g4\",\"g5\"))\n\ndata[data$group == \"g1\",]\n\n  x1 x2 group\n1  3  a    g1\n\ndata[data$group != \"g1\",]\n\n  x1 x2 group\n2  7  b    g2\n3  1  c    g3\n4  8  d    g4\n5  5  e    g5\n\ndata[data$group %in% c(\"g1\",\"g3\"),]\n\n  x1 x2 group\n1  3  a    g1\n3  1  c    g3\n\nsubset(data,group == \"g1\")\n\n  x1 x2 group\n1  3  a    g1\n\nfilter(data, group == \"g1\")\n\n  x1 x2 group\n1  3  a    g1\n\n\n\n# if_else R funciton of dplyr package \n\nx &lt;- -3:3\nx\n\n[1] -3 -2 -1  0  1  2  3\n\nif_else (x &lt; 0, \"neg\",\"pos\")\n\n[1] \"neg\" \"neg\" \"neg\" \"pos\" \"pos\" \"pos\" \"pos\"\n\nx_NA &lt;- c(-3:3,NA)\nx_NA\n\n[1] -3 -2 -1  0  1  2  3 NA\n\nif_else(x_NA &lt; 0, \"neg\",\"pos\", \"xxx\")\n\n[1] \"neg\" \"neg\" \"neg\" \"pos\" \"pos\" \"pos\" \"pos\" \"xxx\"\n\n\n\n# sample_n and sample_frac R function in dplyr\n\ndata &lt;- data.frame(x1 = c(1,2,1,3,2,3),\n                   x2 = c(\"a\",\"a\",\"c\",\"a\",\"b\",\"c\"))\n\ndata\n\n  x1 x2\n1  1  a\n2  2  a\n3  1  c\n4  3  a\n5  2  b\n6  3  c\n\nset.seed(14)\n\nsample_n(data,3)\n\n  x1 x2\n1  1  a\n2  3  c\n3  1  c\n\nsample_frac(data,0.33)\n\n  x1 x2\n1  3  a\n2  1  c\n\n\n\n# convert data frame to tibble and test \n\nmy_data &lt;- data.frame(x1 = 1:5,\n                      x2 = LETTERS[1:5],\n                      x3 = 5)\n\n\nmy_data\n\n  x1 x2 x3\n1  1  A  5\n2  2  B  5\n3  3  C  5\n4  4  D  5\n5  5  E  5\n\nmy_tbl &lt;- as_tibble(my_data)\nmy_tbl\n\n# A tibble: 5 × 3\n     x1 x2       x3\n  &lt;int&gt; &lt;chr&gt; &lt;dbl&gt;\n1     1 A         5\n2     2 B         5\n3     3 C         5\n4     4 D         5\n5     5 E         5\n\nis.tbl(my_data) # false\n\n[1] FALSE\n\nis.tbl(my_tbl) # true\n\n[1] TRUE\n\n\n\ndata &lt;- data.frame (x1 = 1:5,\n                   x2 = LETTERS[1:5])\n\ndata\n\n  x1 x2\n1  1  A\n2  2  B\n3  3  C\n4  4  D\n5  5  E\n\npull(data,x1) # apply pull function \n\n[1] 1 2 3 4 5\n\npull(data,1) # pull function with index\n\n[1] 1 2 3 4 5\n\n\n\ndata &lt;- data.frame(x1 = 1:5,\n                   x2 = LETTERS[1:5],\n                   x3 = 5)\n\ndata\n\n  x1 x2 x3\n1  1  A  5\n2  2  B  5\n3  3  C  5\n4  4  D  5\n5  5  E  5\n\nselect(data, c(x1,x3))\n\n  x1 x3\n1  1  5\n2  2  5\n3  3  5\n4  4  5\n5  5  5\n\nrename(data,x1_new = x1)\n\n  x1_new x2 x3\n1      1  A  5\n2      2  B  5\n3      3  C  5\n4      4  D  5\n5      5  E  5\n\nmy_data &lt;- data |&gt;\n  select(c(x1,x3)) |&gt;\n  arrange(x1) |&gt;\n  rename(x1_new = x1, x3_new = x3)\n\nmy_data\n\n  x1_new x3_new\n1      1      5\n2      2      5\n3      3      5\n4      4      5\n5      5      5\n\n\n\n# summarize\n\ndata &lt;- data.frame (gr1 = rep(LETTERS[1:4],each = 3),\n                    gr2 = LETTERS[1:2],\n                    values = 101:112)\n\ndata\n\n   gr1 gr2 values\n1    A   A    101\n2    A   B    102\n3    A   A    103\n4    B   B    104\n5    B   A    105\n6    B   B    106\n7    C   A    107\n8    C   B    108\n9    C   A    109\n10   D   B    110\n11   D   A    111\n12   D   B    112\n\ndata_group &lt;- data |&gt;\n  group_by(gr1,gr2) |&gt;\n  summarise(gr_sum = sum(values))\n\n\n\ndata_group\n\n# A tibble: 8 × 3\n# Groups:   gr1 [4]\n  gr1   gr2   gr_sum\n  &lt;chr&gt; &lt;chr&gt;  &lt;int&gt;\n1 A     A        204\n2 A     B        102\n3 B     A        105\n4 B     B        210\n5 C     A        216\n6 C     B        108\n7 D     A        111\n8 D     B        222\n\n\n\ntib_dest &lt;- read_csv(\"data/Most_Visited_Destination_in_2018_and_2019.csv\")\n\n# view(tib_dest)\n\ntib_dest |&gt;\n  class()\n\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n\ntib_dest_new &lt;- tib_dest |&gt;\n  rename(T2019 = \"International  tourist  arrivals  (2019)\", T2018 = \"International  tourist  arrivals  (2018)\")\n\ntib_dest_new &lt;- tib_dest_new |&gt;\n  mutate(across(everything(), ~ replace(., . == \"-\", NA )),\n         T2019 = as.numeric(str_replace(T2019, \"million\", \"\"))*1e6,\n         T2018 = as.numeric(str_replace(T2018, \"million\", \"\"))*1e6) |&gt;\n  filter(Destination != \"Egypt\" | Region == \"Africa\") |&gt;\n  na.omit()\n\n\ntib_dest_new\n\n# A tibble: 35 × 5\n    ...1 Destination      T2019    T2018 Region \n   &lt;dbl&gt; &lt;chr&gt;            &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;  \n 1     0 Egypt         13000000 11300000 Africa \n 2     1 Morocco       12900000 12300000 Africa \n 3     2 South Africa  10200000 10500000 Africa \n 4     3 Tunisia        9400000  8300000 Africa \n 5     4 Algeria        2400000  2700000 Africa \n 6     5 Zimbabwe       2300000  2600000 Africa \n 7     6 Mozambique     2000000  2700000 Africa \n 8    10 United States 79300000 79700000 America\n 9    11 Mexico        45000000 41300000 America\n10    12 Canada        22100000 21100000 America\n# ℹ 25 more rows\n\nmy_plot &lt;- tib_dest_new |&gt;\n  mutate(Destination = reorder(Destination, - T2019)) |&gt;\n  ggplot(aes(x = Destination,\n             y = T2019,\n             fill = Region)) +\n  geom_col() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90,\n                                   hjust = 1,\n                                   vjust = 0.5))\n\n\nmy_plot"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This project was developed by Derek Rice For INFO 526 - Data Analysis and Visualization at the University of Arizona, taught by Dr. Greg Chism. The team is comprised of the following team members.\n\nTeam member 1: Derek Rice - Professional Engineer in the medical device industry studying MS Data Science online at the Univeristy of Arizona."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Objects Launched into Space",
    "section": "",
    "text": "The intent of this project was to understand the evolution of countries engaged in rocket and space technologies and predict countries who will dominate space in the near future. To complete the analysis the dataset “yearly number of objects launched into outer space” was leveraged. The dataset provides the number of objects launched into space from 1957 to 2023 as a function of country. The source of the dataset is the United Nations Office of Outer Space Affairs and the dataset is available within the tidytuesday package.\nThe analysis was completed in two stages. First, the 1957 to 2023 data was analyzed and plotted as a smooth line plot by country and on a world map, see Figures 1 and 2 respectively. These two plots document the early years of the rocket technology and highlight the dominance of Russia during the infancy of rocket technology, see Figure 2. The static smooth line plots and the interactive maps used to tell the space faring story were created using ggplot2 and the Plotly package respectively.\nThe 1957 to 2023 data was employed to identify the fifteen prominent space faring nations, the countries with the largest number of objects launched. For each of these fifteen countries a second order polynomial regression model was calculated. The country model was utilized to create a second dataset of predicted launche events between 2001 and 2023 and extrapolate the number of objects launched up to the year 2100. The results of the model and predicted number of launches are displayed on a static ggplot smooth line plot and an interactive world map, see Figures 3 and 4.\nThe analysis indicates that Russia, once a dominant force in space technologies will fail to keep pace with other nations eventually losing its ability to launch space objects, see Figures 3 and 4. The work suggests that the United States will dominate space and that China will replace Russia as an important contributor to the industry. The analysis indicates Great Britian will be an important player in future space endeavors, and India will rise as the forth most active nation with respect to launching objects into space."
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Objects Launched into Space",
    "section": "",
    "text": "The intent of this project was to understand the evolution of countries engaged in rocket and space technologies and predict countries who will dominate space in the near future. To complete the analysis the dataset “yearly number of objects launched into outer space” was leveraged. The dataset provides the number of objects launched into space from 1957 to 2023 as a function of country. The source of the dataset is the United Nations Office of Outer Space Affairs and the dataset is available within the tidytuesday package.\nThe analysis was completed in two stages. First, the 1957 to 2023 data was analyzed and plotted as a smooth line plot by country and on a world map, see Figures 1 and 2 respectively. These two plots document the early years of the rocket technology and highlight the dominance of Russia during the infancy of rocket technology, see Figure 2. The static smooth line plots and the interactive maps used to tell the space faring story were created using ggplot2 and the Plotly package respectively.\nThe 1957 to 2023 data was employed to identify the fifteen prominent space faring nations, the countries with the largest number of objects launched. For each of these fifteen countries a second order polynomial regression model was calculated. The country model was utilized to create a second dataset of predicted launche events between 2001 and 2023 and extrapolate the number of objects launched up to the year 2100. The results of the model and predicted number of launches are displayed on a static ggplot smooth line plot and an interactive world map, see Figures 3 and 4.\nThe analysis indicates that Russia, once a dominant force in space technologies will fail to keep pace with other nations eventually losing its ability to launch space objects, see Figures 3 and 4. The work suggests that the United States will dominate space and that China will replace Russia as an important contributor to the industry. The analysis indicates Great Britian will be an important player in future space endeavors, and India will rise as the forth most active nation with respect to launching objects into space."
  },
  {
    "objectID": "index.html#datasets",
    "href": "index.html#datasets",
    "title": "Objects Launched into Space",
    "section": "Datasets",
    "text": "Datasets\n\n(I) The Space Objects Dataset (1957 to 2023)\n\nThe dataset summarizes the number of objects launched into space from 1957 to 2023 as a function of entity.\nThe source of the dataset is the United Nations Office of Outer Space Affairs. A prior analysis of the dataset is available here: https://ourworldindata.org/grapher/yearly-number-of-objects-launched-into-outer-space\nDataset source: https://github.com/rfordatascience/tidytuesday/blob/master/data/2024/2024-04-23/readme.md\nThe dataset is comprised of 4 columns and 1175 rows, Year, Entity, Country Code, and Number of Objects Launched.\nI choose the dataset because I was thinking it would be interesting to identify the countries launching gadgets into space and the magnitude of the difference between the United States and other countries.\nFigure 1: A static graphical plot summary of the data - the plot presents an overview of the dataset and visually displays the number of launches per entity between 1957 and 2023.\nFigure 2: A dynamic world map - move the slider located on the bottom of the map graphic from 1957 to 2023 to see highlighted countries launching space vehicles each year.\n\n\n\n(II) Space Objects Predicted (2001 to 2100)\n\nThe origian dataset was used to identify the fifteen most active countries launching gadgets into space.\nA second order polynomial Y (number of objects) = function (interectp + year + year^2) for the fifteen most active countries was calculated.\nThe model was used to predict the number of launches between 2001 and 2023 and extrapolate the number of launches up to year 2100.\nThe data generated by the model was stored in a dataset called “extrapolated_data”.\nIt was this extrapolated dataset that I was most interested in to understand tends in the industry.\nThe “extrapolated_data” included five columns (i) Year, (ii) predicted_launches, (iii) Entity, (iv) Code, and (v) hover\nEntity was the country launching gadgets into space - nomenclature carry over from original dataset\nCode was the country code needed for identifying the “entity” on the map.\nhover includes the information displayed when the mouse is hovering over a country on the interactive map.\nFigure 3: A static graphical smooth line plot of the predicted and extrapolated data from 2001 to 2100.\nFigure 4: A dynamic map, zoom in and move around the map, there is a slider located at the base of the map, move the slider to display predicted launch events from 2001 to 2100, hover over a geography to see country specific data.l\n\n\n\nData Variable Descriptions: (I) The Space Objects Dataset (1957 to 2023)\nThe dataset comprises 4 columns and 1175 rows. The dataset summarizes space launch events between 1957 and 2023 as a function of the entity or country responsible for the launch.\nEntity:  the country launching the space object.\nCode:  country code used to plot data on an interactive map.\nYear:  the year of the launch.\nnum_objects:  the number of objects launched by “Entity” during a year.\n\n\nData Variable Descriptions: (II) The Space Objects Predicted (2001 to 2100)\nThe extrapolated_data dataset comprises 5 columns. The dataset summarizes predicted space launch events from 2001 to 2100 using the second order polynomial regression model generated from the original “space objects dataset”.\nYear:  the year of the launch.\npredicted_launches:  the number of objects launched by “Entity” during a year.\nEntity:  the country launching the space object.\nCode:  Country Code - used to plot data to the interactive map.\nhover:  text used on the interactve map when hovering over a country. Displays country name and number of launch events for year selected using the sliding scale at the base of the map."
  },
  {
    "objectID": "index.html#question-1-what-nation-is-likely-to-dominate-space-in-the-not-so-distant-future",
    "href": "index.html#question-1-what-nation-is-likely-to-dominate-space-in-the-not-so-distant-future",
    "title": "Objects Launched into Space",
    "section": "Question 1: What nation is likely to dominate space in the not so distant future?",
    "text": "Question 1: What nation is likely to dominate space in the not so distant future?\nQuestion 1 - what country is most likely to become the first “space faring nation” and is there a close second? I propose to define “space faring nation” as the country that launches an order of magnitude more vehicles into space than all other countries combined. To answer the question, a second order polynomial regression model was fit to the 1957 to 2023 dataset for the 15 most active countries. The model was sued to predict and extrapolate launch activity from 2001 to 2100 to help identify the likely candidates."
  },
  {
    "objectID": "index.html#approach",
    "href": "index.html#approach",
    "title": "Objects Launched into Space",
    "section": "Approach",
    "text": "Approach\nThe question to be answered was to identify future space faring nations by identifying the counties with the most launch events in the future. To accomplish the tasks the original dataset, launch events by country as a function of year, was plotted on a ggplot geom_smooth() plot with year on the x-axis and the number of events on the y-axis, see Figure 1. To enable the user to interact with the dataset the data was also plotted on an interactive map, where a slider displayed launch data for a selected year, and by using a mouse to hover over a country launch data for that country could be displayed, see Figure 2. Both figures 1 and 2 provided insight into the evolution of the space launch industry and helped identify dominant countries.\nThe tidytuesday space_launch_objects dataset was leveraged to create a second order polynomial model for the fifteen most dominant countries. The model was used to predict launch events by country for the fifteen selected countries for the period 2001 to 2100. That regression model was used to generate a new dataset “extrapolated_data” that stored the predicted launch event numbers by country. The “extrapolated_data” was then plotted on a smooth line plot, with years (2001 to 2100) on the x-axis, and the number of launch events on the y-axis, see Figure 3. The extrapolated_data was also plotted on an interactive map, see Figure 4. Using the map users can select a year using a slider, see the number of total launch events on an evolving scale, and hover over a geography for one of the fifteen selected countries to see country specific predicted launch data for a selected year."
  },
  {
    "objectID": "index.html#analysis",
    "href": "index.html#analysis",
    "title": "Objects Launched into Space",
    "section": "Analysis",
    "text": "Analysis\nThe dataset “outer_space_objects” was loaded from the tidytuesday package and dplyr functions used to remove rows with missing data and, create the “hover” column to support the interactive map, and remove a categorical variable “world” from the “entity” column. Removing the “world” data reduced the dataset to include only country data for launched objects. The dataset provided the number of space vehicle launches by country between 1957 and 2023. The dataset was plotted on a static ggplot smooth line plot and an interactive map using ggplot2 and plotly respectively, see Figures 1 and 2.\nCreating the first plot, the smooth line plot in ggplot2, required reducing the number of countries to 11 to support the scale_color_brewer palette limitations, see Figure 1. The dplyr package and the pipe function was used to isolate the eleven most active countries and then separate out that dataset from the original “outer_space_objects” dataset. A smooth line plot was used to display launches by country for the time period 1957 to 2023 for the eleven most active countries, see Figure 1.\n\n\n\n\n\n\n\n\n\nTo make things a little more interesting, enable some interaction with the data, the “outer_space_objects” dataset has been displayed on an interactive map, see Figure 2. Launch data for all countries in the “outer_space_objects” dataset is displayed on the map as a function of year and country, see Figure 2. Users can interact with the bar slider at the base of the map to see launch events per year by country. Hovering over a country displays the number of launch events in the year selected by the slider. The year selected on the sliding bar scale is displayed on the top right of the slider graphic. There is also a play function for the slider to the left. The interactive map was created using plotly after a lot of reading and watching an excellent YouTube video on the package, see citation.\n\n\n\n\n\n\nThe intent of the analysis was to determine what countries would dominate space launch events in the future. To answer the question a original “outer_space_objects” dataset was used to calculate a second order polynomial regression model for the fifteen most active countries. The model was used to predict the number of launch events as a function of year for each of the fifteen most active countries.\nTo accomplish this task, fit a regression model to the data by country, a new dataset was created (new_data) with years 2001 to 2100 and the tibble() to hold the final data initialized (extrapolated_data). The fifteen most active countries were separated from the “outer_space_objects” dataset using dplyr pipe function (top_15_countries) and the country code added (country_plus_code) to enable the interactive map.\nDplyr pipe functions significantly reduced the complexity of these tasks. , prior to this class I would have use a loop to break the dataset into a three dimensional array, with x and y holding country data, and the z axis identifying specific countries and then iterated over the array to create the model and then re-assembly the dataset in another loop. In the exercise, the combination of a single loop with embedded dplyr pipe functions was utilized to (a) select data for a country, (b) apply a polynomial model to that country data, (c) create the predicted launch data (y_pred) for the selected country, and (d) assemble all the data into one dataset “extrapolated_data” using the bind_rows function. Dplyr pipe functions were utilized again to create the final “extrapolated_data” dataset by renaming columns, setting negative y_pred value to zero, create the data for the hover column, and removing the non-country data i.e. “world”.\nThe predicted launch data from 2001 to 2100 is displayed on a ggplot2, geom_smooth(), smooth line plot, see Figure 3. To display all fifteen countries the scale_color_brewer was removed from the code, that palette was limited to displaying eleven categorical variables. A review of available palettes did not identify an alternative capable of assigning high contract colors to fifteen variables within a category; as a result, the default palette was used to create Figure 3. The colors displayed are not the best, the contrast is weak, but the only other option was to reduce the number of countries displayed from fifteen to eleven.\n\n\n\n\n\n\n\n\n\nAn interactive map displaying predicted space launch events between 2001 and 2023, see Figure 4. The data displayed between 2001 and 2023 are predicted events based on the regression model, not actual launch events. The data 2024 to 2100 is the modeling extrapolating the data from 1957 to 2023 into the future. The map was created using Plotly and the “extrapolated_data” generated from the regression model. Within Plotly; plot_geo defines the type of plot – a world map in this instance. The add_trace functionality defines the variable tracked by the scale bar at the bottom of the plot. The layout definition describes the fonts, colors of land and oceans, the borders between countries, etc."
  },
  {
    "objectID": "index.html#discussion",
    "href": "index.html#discussion",
    "title": "Objects Launched into Space",
    "section": "Discussion",
    "text": "Discussion\nThe original question asked “what countries will dominate space launch events in the near future?”. The dataset “yearly number of objects launched into space” available within tidytuesday was utilized to assess available space vehicle launch data and complete the analysis. The dataset provides the number of gadgets launched into space for each country by year during the time period 1957 and 2023, from the Russian launch of Sputnik, the American race to exceed the Russians, and the rise of SpaceX and Blue Origin funded by Musk and Bezos respectively. The smooth line plot visually displays the exponential growth in the number of gadgets launched in to Earth orbit in recent years.\nThe analysis of the original data set was completed by plotting the launch data on a ggplot geom_smooth() plot to see the number of events grow during the time period 1957 to 2023, see Figure 1. To understand the importance of nations the launch data was also plotted on an interactive map. While working on the project, several map applications were investigated, however, plotly simply provided ease of coding combined with the interactivity, see Figure 2. The interactive map tell the story of the initial Russian leadership in 1957, the quick dominance demonstrated by the Americans several years later, and the evolving global participation in space during the period 2000 through 2023, and the recent exponential growth in space launch activity, see Figure 2.\nThe smooth line plot of the original data displays the exponential growth in the number of objects launched into space, see Figure 1. For that reason a second order polynomial was selected to model the dataset and predict future space launch events for the fifteen most prominent countries. The regression model was used to predict launch events during the period 2001 through 2023 and then extrapolate future activity to the year 2100, see Figure 3. The model predicts that by 2100 there will be in excess of 10,000 launch events per year with the United States responsible for over 8,000 of those instances. The model predicts the demise of the Russia space industry and the rise of both China and India as significant players along with Great Britian, see Figure 4. Using the interactive plotly map it is possible to zoom in and out, pan left and right, and use the sliding bar to understand the predicted dataset of future launch events. Zooming in on Europe in particular and looking at Great Britian vs. the rest of Europe is very informative.\nTo answer the question – The United States is on track to dominate space to become the first spacing faring nation. The data model indicates an incredible growth of the space industry within the United States outpacing all other nations combined."
  },
  {
    "objectID": "index.html#conclusions",
    "href": "index.html#conclusions",
    "title": "Objects Launched into Space",
    "section": "Conclusions",
    "text": "Conclusions\nI learned so much from this class – it is surprising to me. Prior to INFO526 I had no idea how to use ggplot2 beyond the simplest plots, I had no experience with dplyr and pipes, and the probability I would create an interactive map was a losing proposition. When I wrote the project proposal, I had no idea then how I would plot the launch data on a map. In short, the class has been eye opening for me. I work in an industry where engineering is complex, but the decision makers are not technical people and communication between Engineering and Leadership can be challenging. Previously, when communicating complex topics, I would complete a statistical analysis and create basic plots in Minitab or JMP to express a point of view, but not everybody has a statistical background. It will be interesting to see how I apply this new toolkit, and a more holistic perspective of data visualization, to improve how I communicate very complex topics to the decision makers and lay people."
  },
  {
    "objectID": "more_coding_practice_22JUNE2024.html",
    "href": "more_coding_practice_22JUNE2024.html",
    "title": "more review",
    "section": "",
    "text": "# cite: https://www.youtube.com/watch?v=h29g21z0a68&t=290s \n# just a review, should probably be more focused on maps and interactive maps, a quick review  \n\ndata(\"faithful\")\nggplot(data = faithful,\n       mapping = aes(x = eruptions, y = waiting, colour = eruptions)) +\n  geom_point()\n\n\n\n\n\n\n\nggplot() +\n  geom_point(mapping = aes(x = eruptions, y = waiting, colour = eruptions &lt; 3),\n             data = faithful)\n\n\n\n\n\n\n\nggplot(faithful) +\n  geom_histogram(aes(x = eruptions, fill = eruptions &lt; 3))\n\n\n\n\n\n\n\nggplot(faithful, aes(x = eruptions, y = waiting)) +\n  geom_density_2d() +\n  geom_point()\n\n\n\n\n\n\n\n# make points sqr and slightly transparent \n\n\nggplot(faithful) +\n  geom_point(aes(x = eruptions, y = waiting), shape = 'square')\n\n\n\n\n\n\n\nggplot(faithful) +\n  geom_point(aes(x = eruptions, y = waiting), shape = 'square', alpha = 0.5)\n\n\n\n\n\n\n\n# colour dist. in two difference colours \nggplot(faithful) +\n  geom_histogram(aes(x = eruptions, fill = eruptions &lt; 3.1))\n\n\n\n\n\n\n\n# colour based on weight &gt; 60\n\n# view(faithful) # two para. eruptions and waiting \n\nggplot(faithful) +\n  geom_histogram(aes(x = eruptions, fill = waiting &lt; 60, position = \"identity\", alpha = 0.5))\n\n\n\n\n\n\n\n# add a line that separates the two point dist.\n# how to draw a straight lines from a slope and intercept \n\nggplot(faithful) +\n  geom_point(aes(x = eruptions, y = waiting)) +\n  geom_abline(slope = 15, intercept = 25, colour = \"red\", linewidth = 3)\n\n\n\n\n\n\n\n\n\nview(mpg)\n\n\nggplot(mpg) +\n  geom_bar(aes(x = class, fill = as.factor(cyl)), colour = \"black\")\n\n\n\n\n\n\n\nmpg_counted &lt;- mpg |&gt;\n  count(class, name = \"count\")\n\nview(mpg_counted)\n\nggplot(mpg_counted) +\n  geom_bar(aes(x = class, y = count),\n           stat = 'identity') #identity is just passing the data along \n\n\n\n\n\n\n\nggplot(mpg) +\n  geom_density(aes(x = hwy, y = after_stat(scaled)))\n\n\n\n\n\n\n\nggplot(mpg) +\n  geom_jitter(aes(x = class, y = hwy), width = 0.2)\n\n\n\n\n\n\n\nggplot(mpg) +\n  geom_point(\n    aes(x = displ, y = hwy, colour = class)\n  ) +\n  scale_colour_brewer(name = 'CLASS', type = 'qual', palette = 'Set1')\n\n\n\n\n\n\n\nggplot(mpg) +\n  geom_point(aes(x = displ, y = hwy)) +\n  scale_x_continuous(breaks = c(3,5,6)) +\n  scale_y_continuous(trans = 'log10')\n\n\n\n\n\n\n\nggplot(mpg) +\n  geom_point(aes(x = displ, y = hwy, colour = class, size = cyl)) +\n  scale_colour_brewer(type = 'qual') +\n  scale_size_area(breaks = c(4,5,6,8))\n\n\n\n\n\n\n\n\n\nggplot(mpg) +\n  geom_point(aes(x = displ, y = hwy)) + \n  facet_wrap(~ class)\n\n\n\n\n\n\n\nggplot(mpg) +\n  geom_point(aes(x = displ, y = hwy)) + \n  facet_grid(year ~ drv)\n\n\n\n\n\n\n\n\n\n# coordinates \n\nggplot(mpg) +\n  geom_bar(aes(x = class)) +\n  coord_polar()\n\n\n\n\n\n\n\nggplot(mpg) +\n  geom_bar(aes(x = class)) +\n  coord_polar(theta = 'y')\n\n\n\n\n\n\n\nggplot(mpg) +\n  geom_bar(aes(x = class)) +\n  coord_polar(theta = 'y') +\n  expand_limits (y = 70) # set max on raidial dial \n\n\n\n\n\n\n\n# zoom in on data - set limits on scale \nggplot(mpg)+ \n  geom_bar(aes(x = class)) +\n  scale_y_continuous(limits = c(0,40)) #removes data \n\n\n\n\n\n\n\nggplot(mpg)+ \n  geom_bar(aes(x = class)) +\n  coord_cartesian(ylim = c(0,40)) #coord_cartesian does NOT remove data \n\n\n\n\n\n\n\n# then work on theme but nothing new \n\n\n# cite: https://www.youtube.com/watch?v=0m4yywqNPVY&t=296s\n\n# Part 2\n\n# ggplot\n## 47 geoms\n## 25 stats\n## 62 scales \n\np1 &lt;- ggplot(msleep) +\n  geom_boxplot(aes(x = sleep_total, y = vore, fill = vore))\n\np2 &lt;- ggplot(msleep) +\n  geom_bar(aes(y = vore, fill = vore))\n\np3 &lt;- ggplot(msleep) +\n  geom_point(aes(x = bodywt,\n                 y = sleep_total,\n                 colour = vore)) +\n  scale_x_log10()\n\np3\n\n\n\n\n\n\n\ncombined_plot &lt;- p1 + p2 + p3\n\nprint(combined_plot)\n\n\n\n\n\n\n\nplot_all &lt;- (p1 | p2) / p3\n\nprint(plot_all)\n\n\n\n\n\n\n\nnew_plot &lt;- plot_all\n\nnew_plot &\n   theme(\n    legend.position = \"none\" # removes legend from all plots\n  ) \n\n\n\n\n\n\n\nnew_plot +\n   plot_annotation(\n    title = \"Mammalian Sleep Patterns\",\n    tag_levels = \"A\" # tags plots - can use roman I \n  ) &  # must use & and not +\n   theme(\n    legend.position = \"none\" # removes legend from all plots\n  ) \n\n\n\n\n\n\n\nnew_plot +\n   plot_annotation(\n    title = \"Mammalian Sleep Patterns\",\n    tag_levels = \"I\" # tags plots - can use roman I \n  ) &  # must use & and not +\n   theme(\n    legend.position = \"none\" # removes legend from all plots\n  ) \n\n\n\n\n\n\n\n# Plot Composition\n\n# stories are told with multiple plots\n\n# plot layout hsould be flexible and well aligned \n\n# many approaches\n## facet hacking\n## gridExtra::grid.arrange()\n## ggpubr::ggrange()\n## cowplot::plot_grid()\n\n## patchwork &lt;- preferred? \n\n\np = ggplot(mtcars) +\n  geom_point(aes(x = disp, y = mpg))\n\np + p + p + plot_layout(width = c(1,2,1))\n\n\n\n\n\n\n\np + p + p + plot_layout(width = unit(c(5,1,1),c('cm','null','null'))) # null is fill out remaining area\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(mtcars[mtcars$gear == 3,]) +\n  geom_point(aes(x = disp, y = mpg))\n\np2 &lt;- ggplot(mtcars[mtcars$gear == 4,]) +\n  geom_point(aes(x = disp, y = mpg))\n\np1 + p2  # axis are not aligned\n\n\n\n\n\n\n\n# view(mtcars)\n\np1 + p2 & scale_y_continuous(limits = c(10,40)) & scale_x_continuous(limits = c(50,500))\n\n\n\n\n\n\n\n\n\n# how should the textual rep. be understood? \n\n### layout in Patchwork ### \n\np1 &lt;- ggplot(mtcars) +\n  geom_point(aes(x = disp, y = mpg))\n\np2 &lt;- ggplot(mtcars) +\n  geom_bar(aes(x = factor(gear)))\n\np3 &lt;- ggplot(mtcars) +\n  geom_boxplot(aes(x = factor(gear), y = mpg))\n\np1 + p2 + p3\n\n\n\n\n\n\n\nlayout &lt;- '\nAAA #fraction of screen width used for plot AA# = left 2/3 and #AA = right 2/3 and AAA = full width\n#BB # can also use numbers 1, 2, 3 ... \nC##\n'\n\n# p1 + p2 + p3 + plot_layout(design = layout)\n\n\n### animations \n\n# ANIMATION \n# story telling and attention grabbing\n# may turn boring people off\n# our eyes are drawn to movement and our mind thinks in motion \n\n# many ways to make animaltions - gganimage may be the only one doing the \"grammar\" way \n\n# ggplot2 wrapper - simply provides new grammar elements and takes over rendering \n\nggplot(economics) +\n  geom_line(aes(x = date, y = unemploy))\n\n\n\n\n\n\n\nggplot(economics) +\n  geom_line(aes(x = date, y = unemploy)) +\n  transition_reveal(along = date)\n\n\nggplot(mpg) +\n  geom_bar(aes(x = factor(cyl))) +\n  labs(title = \"Number of cars in {closest_state} by number of cylinders\") +\n  transition_states(states = year) +\n  enter_grow() +\n  exit_fade() \n\n\nggplot(mpg) +\n  geom_point(aes(x = displ, y = hwy)) +\n  ggtitle(\"Cars with {closest_state} cylinders\") +\n  transition_states(factor(cyl))\n\nggplot(mpg) +\n  geom_point(aes(x = displ, y = hwy, group = seq_len(nrow(mpg)))) + #define discrete groups with group=seq_len()\n  ggtitle(\"Cars with {closest_state} cylinders\") +\n  transition_states(factor(cyl))\n\n\n\n\n\n\n\n\n\n## ANNOTATION \n# two key packages\n# ggrepel\n# ggforce \n\nggplot(mtcars, aes(x = disp, y = mpg)) +\n  geom_point() +\n  geom_text_repel(\n    aes(label = row.names(mtcars))\n  )\n\n\n\n\n\n\n\n# ggrepel\nggplot(mtcars, aes(x = disp, y = mpg)) +\n  geom_point() +\n  geom_text_repel(\n    aes(label = row.names(mtcars))\n  )\n\n\n\n\n\n\n\n# ggforce\nggplot(mtcars, aes(x = disp, y = mpg)) +\n  geom_point() +\n  geom_mark_ellipse(  # there are other options to ellipse, circle, square, hull\n    aes(filter = gear == 4,\n        label = '4 gear cars',\n        description = \"cars with fewer gears .. \"))\n\n\n\n\n\n\n\n# reduce number of points with labels\n# ggrepel\nmtcars2 &lt;- mtcars\nmtcars2$label &lt;- rownames(mtcars2)\npoints_to_label &lt;- sample(nrow(mtcars),10) #first ten labels \n\nggplot(mtcars2, aes(x = disp, y = mpg)) +\n  geom_point() +\n  geom_text_repel(aes(label = label), data = mtcars2[points_to_label,])\n\n\n\n\n\n\n\nggplot(mtcars, aes( x = disp, y = mpg)) +\n  geom_point() +\n  geom_mark_ellipse(aes(fill = factor(gear), label = gear)) # very interesting \n\n\n\n\n\n\n\n# also a package called gghighlight \n\n\n### Part 3: Beyond GGPLOT2 #######\n# https://www.youtube.com/watch?v=0m4yywqNPVY&t=3884s\n# 1:24:00\n\n# NETWORKS\n# GGally\n# ggnetwork\n# geomnet\n# ggtree\n# ggdag\n#install.packages(\"BiocManager\")\n#BiocManager::install(\"ggtree\")\n\n# install.packages(\"ggtree\")\nlibrary(ggtree)\nlibrary(ape)\n\n# for graphically displaying socal networks, the interelatinship between nodes\n\n# can plot a hierarchical clusters \n\niris_clust &lt;- hclust(dist(iris[,1:4]))\n\niris_phylo &lt;- as.phylo(iris_clust)\n\nggtree(iris_phylo) +\n  geom_tiplab() +\n  theme_tree2()\n\n\n\n\n\n\n\n\n\n# Part 4 - drawing anything\n# 1:48:00"
  },
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Objects Launched into Space",
    "section": "",
    "text": "if (!require(\"pacman\"))\n    install.packages(\"pacman\")\n\npacman::p_load(tidyverse, tidytuesdayR, dplyr, janitor, lubridate,ggplot2)"
  },
  {
    "objectID": "proposal.html#dataset-outer-space-objects",
    "href": "proposal.html#dataset-outer-space-objects",
    "title": "Objects Launched into Space",
    "section": "Dataset: Outer Space Objects",
    "text": "Dataset: Outer Space Objects\n\nThe dataset summarizes the number of objects launched into space from 1957 to 2023 as a function of entity.\nThe source of the dataset is the United Nations Office of Outer Space Affairs. A prior analysis of the dataset is available here: https://ourworldindata.org/grapher/yearly-number-of-objects-launched-into-outer-space\nDataset source: https://github.com/rfordatascience/tidytuesday/blob/master/data/2024/2024-04-23/readme.md\nThe dataset is comprised of 4 columns and 1175 rows - see “head” and “glimpse” summarized herein.\nI choose the dataset because I was thinking it would be interesting to identify the countries launching gadgets into space and the magnitude of the difference between the United States and other countries.\nA graphical plot summary of the data is provided below - the plot presents an overview of the dataset and visually displays the number of launches per entity between 1957 and 2023.\n\n\n# cite: https://github.com/rfordatascience/tidytuesday/blob/master/data/2024/2024-04-23/readme.md\n\nouter_space_objects &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-04-23/outer_space_objects.csv')\n\n\ndim(outer_space_objects)\n\n[1] 1175    4\n\n\n\nhead(outer_space_objects)\n\n# A tibble: 6 × 4\n  Entity  Code   Year num_objects\n  &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;       &lt;dbl&gt;\n1 APSCO   &lt;NA&gt;   2023           1\n2 Algeria DZA    2002           1\n3 Algeria DZA    2010           1\n4 Algeria DZA    2016           3\n5 Algeria DZA    2017           1\n6 Angola  AGO    2017           1\n\n\n\nglimpse(outer_space_objects)\n\nRows: 1,175\nColumns: 4\n$ Entity      &lt;chr&gt; \"APSCO\", \"Algeria\", \"Algeria\", \"Algeria\", \"Algeria\", \"Ango…\n$ Code        &lt;chr&gt; NA, \"DZA\", \"DZA\", \"DZA\", \"DZA\", \"AGO\", \"AGO\", NA, NA, NA, …\n$ Year        &lt;dbl&gt; 2023, 2002, 2010, 2016, 2017, 2017, 2022, 1985, 1992, 1996…\n$ num_objects &lt;dbl&gt; 1, 1, 1, 3, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 3…\n\n\n\nfiltered_outer_space_objects = outer_space_objects %&gt;%\n  filter (Entity %in% c(\"United States\",\"China\",\"Russia\",\"Japan\",\"France\",\"India\",\"European Space Agency\", \"Germany\"))"
  },
  {
    "objectID": "proposal.html#graphical-summary-of-the-dataset",
    "href": "proposal.html#graphical-summary-of-the-dataset",
    "title": "Objects Launched into Space",
    "section": "Graphical Summary of the Dataset",
    "text": "Graphical Summary of the Dataset\n\nggplot(data = filtered_outer_space_objects, aes(x=Year, y=num_objects, color = Entity)) +\n  geom_smooth(se = FALSE, method = loess) +\n  labs(\n    x = \"year of launch\",\n    y = \"number of objects launched\",\n    title = \"Number of objects launched into space by year\",\n    subtitle = \"data collected from United Nations Office of Outer Space Affairs\",\n    caption = \"objects are defined as satelllites, probes, landers, crewed spacecrafts, and space station flights\"\n  ) +\n  theme(\n    axis.text.x = element_text(size = 8, face = \"bold\"),\n    axis.text.y = element_text(size = 8, face = \"bold\"),\n    plot.title = element_text (size = 10, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 8, face = \"plain\", hjust = 0.5),\n    plot.caption = element_text(size = 6, face = \"plain\", hjust = 1),\n    panel.background = element_rect(fill = \"white\"),\n    plot.background = element_rect(fill = \"white\"),\n    panel.grid.major = element_line(color = \"gray90\"),\n    panel.grid.minor = element_line(color = \"gray95\")\n  )"
  },
  {
    "objectID": "proposal.html#dataset-variable-column-descriptions",
    "href": "proposal.html#dataset-variable-column-descriptions",
    "title": "Objects Launched into Space",
    "section": "Dataset Variable (column) Descriptions",
    "text": "Dataset Variable (column) Descriptions\n\nThe dataset comprises 4 columns and 1175 rows. The dataset summarizes space launch events between 1957 and 2023 as a function of the entity or country responsible for the launch.\nEntity:  the country launching the space object\nCode:  the type of gadget launched into Earth orbit or beyond (satellites, probes, landers, crewed spacecrafts, and space station components)\nYear:  the year of the launch\nnum_objects:  the number of objects launched by “Entity” during a year."
  },
  {
    "objectID": "proposal.html#questions",
    "href": "proposal.html#questions",
    "title": "Objects Launched into Space",
    "section": "Questions",
    "text": "Questions\n\nQuestion 1 - what country is most likely to become the first “space faring nation” and is there a close second? I propose to define “space faring nation” as the country that launches an order of magnitude more vehicles into space than all other countries combined. I’ll fit a polynomial regression model to the dataset by country and extrapolate the model into the future to help identify the likely candidates."
  },
  {
    "objectID": "proposal.html#analysis-plan",
    "href": "proposal.html#analysis-plan",
    "title": "Objects Launched into Space",
    "section": "Analysis plan",
    "text": "Analysis plan\n\nThe analysis plan is to plot the data on a map and display the launches by country over time. Currently, I have no idea how to do this, create a map, and plot an event from the data set onto the map?\nI am thinking I will need to get a map of the world with the countries displayed. Another data set with the longitude and latitude for each country may be needed.\nThe launch event data set includes country and number of launches per year, to this I am thinking I will need to add columns defining the longitude and latitude of each launch event.\nWith longitude and latitude defined for each row/event I would then plot the launches on a map.\nThe analysis plan is to have an office hours meetign with Professor Chism the week of June 3rd and discuss how to plot country launch data on a world map. I’ll then completed the required learning and apply that new skillset to the launch dataset."
  },
  {
    "objectID": "proposal.html#detailed-analysis-plan",
    "href": "proposal.html#detailed-analysis-plan",
    "title": "Objects Launched into Space",
    "section": "Detailed Analysis Plan",
    "text": "Detailed Analysis Plan\n\nReview with Professor Chism how best to plot data on a world map\nUse a polynomial regression model to extrapolate the launch data by country into the future for the six most prominant countries\nPlot the extrapolated dataset onto a world map to identify the most likely country to become a “Space Faring Nation”."
  },
  {
    "objectID": "proposal.html#plan-of-attack",
    "href": "proposal.html#plan-of-attack",
    "title": "Objects Launched into Space",
    "section": "Plan of Attack",
    "text": "Plan of Attack\n\nApproach by Task\n\n\n\n\n\n\n\n\nTask Name\nStatus\nDate\nSummary\n\n\n\n\nSelect dataset\ncomplete\nMay 27th\nselected the Space Object Launch Dataset\n\n\nDefine question to be answered\ncomplete\nMay 28th\nwhat country is most likely to become the 1st space faring nation\n\n\nSubmit draft proposal for peer review\ncomplete\nMay 29th\nproposal submitted - comments under review\n\n\nResponse to peer review\ncomplete\nJune 2nd\npeer review comments incorporate into the proposal\n\n\nSubmit project proposal\ncomplete\nJune 3rd\nproposal submitted to Professor Chism\n\n\nOffice hours with Prof Chism to discuss approach\nin-work\nJune 9th\nneed to learn how to plot launch data on a map?\n\n\nComplete required learning\nin-work\nJune 15th\nReviewed material suggested by Prof. Chism\n\n\nComplete initial analysis of the dataset\nnot started\nJune 15th\nData plotted on a map\n\n\ndraft presentation and writeup\nnot started\nJune 21st\ndraft files committed to github\n\n\nComplete presentation\nnot started\nJune 23rd\nsubmit to github\n\n\nComlete writeup\nnot started\nJune 23rd\nsubmit to github\n\n\nfinal submission\nnot started\nJune 24th\nsubmit to github"
  }
]