---
title: "Outer Space Vehicle Launch"
subtitle: "INFO 526 - Summer 2024 - Final Project"
author: "Derek Rice"
title-slide-attributes:
  data-background-image: images/curiosity-marker-band-valley.jpg
  data-background-size: stretch
  data-background-opacity: "0.7"
  data-slide-number: none
format:
  revealjs:
    theme:  ['data/customtheming.scss']
    smaller: true
    scrollable: false
editor: visual
execute:
  echo: false
---

```{r}

#| label: load-pkgs
#| message: false
if (!require("pacman"))
    install.packages("pacman")

pacman::p_load(tidyverse, 
               dplyr, 
               ggplot2,
               readr,
               patchwork,
               gganimate,
               ggrepel,
               spData,
               plotly,
               rnaturalearth,
               RColorBrewer
              )

```

```{r}
#| label: setup
#| include: false

# Plot theme
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 8))

# For better figure resolution
knitr::opts_chunk$set(
  fig.retina = 3, 
  dpi = 300, 
  fig.width = 6, 
  fig.asp = 0.618 
  )
```

```{r}
#| label: load-data
#| include: false
# Load data here

# cite: https://github.com/rfordatascience/tidytuesday/blob/master/data/2024/2024-04-23/readme.md

outer_space_objects <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-04-23/outer_space_objects.csv')

# view(outer_space_objects)

objects <- outer_space_objects |>
  na.omit() |>
  mutate(hover = paste0(Entity, "\n", num_objects)) |>
  filter(Entity != "World") 

```

```{r}
# cite: https://ggplot2.tidyverse.org/
# cite: Hadley Wickham, ggplot2, Elegant Graphics for Data Analysis 2nd Edition. Springer. 2016. 
# cite: https://r-graph-gallery.com/38-rcolorbrewers-palettes.html

top_11 <- objects |> # to keep things simple picked top 11 countries 
  group_by(Entity)|>
  summarize(total = sum(num_objects, na.rm = TRUE))|>
  arrange(desc(total)) |>
  top_n(total, n=11) |> #because scale_color_brewer has limits in number of entities
  select(Entity)

top_11_entity <- top_11$Entity # identify the 11 most active countries - simplify the plot

objects_top_11_countries <- objects |> # getting dataset for top 11 most active countries 
   filter(Entity %in% top_11_entity)

```

```{r}
# cite: https://www.youtube.com/watch?v=RrtqBYLf404 (this is an excellent learning video)
# cite: https://plotly-r.com/maps
# cite: https://plotly.com/r/map-configuration/ (plotly learning)

Figure_1 <- plot_geo(objects,
                          locationmode = "world",
                          frame = ~Year) |>
  add_trace(locations = ~Code,
            z = ~num_objects,
            colorscale = 'Electric',
            text = ~hover,
            hoverinfo = 'text') |>
  layout(title = list(
      text = "<b>Figure 1: Number of Objects Launched into Space by country \n (1957 and 2023)",
      font = list(family = 'Arial', size = 16, color = 'black')   
      ),
           geo = list(
           scope = 'world',
           showland = TRUE,
           landcolor = toRGB("LightGreen"),
           showocean = TRUE,
           oceancolor = toRGB("LightBlue"),
           showcountries = TRUE,
           projection = list(type = "Mercator")),
         font = list(family = 'Arial', size = 12, color = 'black'),
         annotations = list(
           text = "<b>Data Source: tidytuesday,outer_space_objects.csv",
           showarrow = FALSE,
           x = 1,
           y = 0
         )) |>
   config(displayModeBar = FALSE)|>
   colorbar(title = "<b>Number of Objects", color = 'black') 

```

```{r}
# cite: https://www.youtube.com/watch?v=LRU5TxFD394&list=PLu6UwBFCnlEddsED6LFhgrg1vH-X6e4Ah (dplyr learning)


# The first plot provides data from 1957 to 2022
# to make things more interesting here attempt to extrapolate data out to 2100 
# next plot will provide data from 2001 to 2100 
# we'll see how this goes? 

# plan
# 1 - split the dataset by country - select top 15 countries as of 2022 (simplify the work/code?)
# 2 - use a polynomial to fit a model to the launch data for each country
# 3 - use the model to extrapolate out to 2100
# 4 - recombine the dataset into a single data frame 
# 5 - use Plotly to recreate the above using the extrapolated dataset 

data <-  objects # creating a new object 

new_data <- tibble( # creating the list of years to be used as x to predict number of launches
  Year = seq(2000, 2100, by = 1)
)

# unique(data$Entity)

extrapolated_data <- tibble() # initialize an object 

# view(data)
# view(new_data)

top_15_countries <- data |> # to keep things simple picked top 15 countries 
  group_by(Entity)|>
  summarize(total = sum(num_objects, na.rm = TRUE))|>
  arrange(desc(total)) |>
  top_n(total, n=16) |>
  select(Entity)

# unique(top_15_countries$Entity)

country_plus_code <- data |> # need country code to populate maps 
  distinct(Entity, Code) |>
  select(Entity, Code) |>
  semi_join(top_15_countries, by = "Entity")



# unique(country_plus_code$Entity)

# in the following for loop I extract data for a country
# them model (number of launches = function(year)) as a 2nd order polynomial
# I am using a 2nd order poly because the relationshis is not linear based on visual review of dataset
# Once the model is defined predicted data is calculated and stored in the temp_data variable
# dplyr mutate function is used to populate the temp_data variable with year, predicted launches, 
# and country name
# the loop calculates/predicts launches by country from 2000 to 2100
# the predicted data is stored in the tibble "extrapolated_data"
# bind_rows is used to add new calculations by country to the "extrapolated_data" variable

for (i in 1:nrow(top_15_countries)) {
  country = top_15_countries$Entity[i]
  selected_country <- data |> filter(Entity == country)
  model = lm(num_objects ~ poly(Year,2), data = selected_country)
  temp_data <- new_data |>
    mutate(
      y_pred = round(predict(model, newdata = new_data),0),
      Entity = country
      )
  extrapolated_data <- bind_rows(extrapolated_data,temp_data) 
  }

# unique(extrapolated_data$Entity)

#1 the "extrapolated_data variable populated in the loop does not contain country code
#2 I could not figure out how to add country codes within the loop - I tried for hours but so it goes
#3 Here the left_join function is used to add country code to the "extrapolated_data" variable
#4 The "extrapolated_data" variable has (i) year, (ii)y_pred, and (iii) Entity. 
#5 The "country_plus_code" has (iii) entity and (iv) code
#6 "y_pred" was rename "Predicted_Launches" to help with legend on map. y_pred originated from the modeling
#7 the model for Russia displayed negative launches at some point into the future so a mutate function was 
#7 used to prevent the map from displaying a negative number 

extrapolated_data <- extrapolated_data |>
  left_join(country_plus_code, by = "Entity") |>
  rename(predicted_launches = y_pred) |>
  mutate(predicted_launches = if_else(predicted_launches < 0, 0, predicted_launches)) |>
  mutate(hover = paste0(Entity, "\n", predicted_launches)) |>
  filter(Entity != "World")

# unique(extrapolated_data$Entity)

# summary(model)

```

```{r}
Figure_2 <- plot_geo(extrapolated_data,
                          locationmode = "world",
                          frame = ~Year) |>
  add_trace(locations = ~Code,
            z = ~predicted_launches,
            zmin = 0,
            colorscale = 'Electric',
            text = ~hover,
            hoverinfo = 'text') |>
  layout(title = list(
      text = "<b>Figure 2: Predicted Number of Objects Launched into Space by Country \n (2001 and 2100)",
      font = list(family = 'Arial', size = 16, color = 'black')   
      ),
           geo = list(
           scope = 'world',
           showland = TRUE,
           landcolor = toRGB("LightGreen"),
           showocean = TRUE,
           oceancolor = toRGB("LightBlue"),
           showcountries = TRUE,
           projection = list(type = "Mercator")),
         font = list(family = 'Arial', size = 12, color = 'black'),
         annotations = list(
           text = "<b>Data Source: extrapolated polynomial model based on tidytuesday,outer_space_objects.csv",
           showarrow = FALSE,
           x = 1,
           y = 0
         )) |>
   config(displayModeBar = FALSE) |>
   colorbar(title = "<b>Number of Objects", color = 'black') 


```

```{r}

```

## Question:

"What country will dominate the future of space launch?"

## The Dataset

-   Analysis used the "yearly number of objects launched into outer space" dataset.
-   The source of the dataset is the United Nations Office of Outer Space Affairs.
-   The dataset is available within the tidytuesday package.
-   The dataset provides the number of objects launched into space from 1957 to 2023 as a function of country.
-   The dataset starts with the Russian launch of Sputnik, maps out the space race between Russia and the United States, includes the global growth of spacing faring nations, and the recent exponential growth in launch activity.

## Analysis Approach: 

-   Step 1 - data cleanup
-   Step 2 - plot and map dataset to understand the history space launch activity
-   Step 3 - fit a model to the data for the fifteen most active nations
-   Step 4 - use the model to predict future space launch activity
-   Step 5 - plot and map future space launch activity
-   Step 6 - tell the story of the future of space launch

## 

```{r}
# cite: https://plotly.com/r/setting-graph-size/

Figure_1 <- Figure_1 %>% layout(width = 1000, height = 600)

Figure_1
```

## 

```{r}

Figure_2 <- Figure_2 %>% layout(width = 1000, height = 600)


Figure_2

```

## Conclusions

-   The original question was "What country will dominate the future of space launch?"
-   The inital dataset 1957 to 2023 tells the story of Russian early leadership, the American race to catch up during the Apollo years, the evolving global nature of space launch, and the recent exponential growth in the industry.
-   The predicted model suggests American, Chinese, Indian, and United Kingdon launch efforts will grow significantly while Russia will declide over the coming decades.
-   The analysis indicates the first space faring nation will be the United States accounting for over 80% of global space launch activity.
